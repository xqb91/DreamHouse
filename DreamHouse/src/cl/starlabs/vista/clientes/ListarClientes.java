/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cl.starlabs.vista.clientes;

import cl.starlabs.controladores.ClienteJpaController;
import cl.starlabs.modelo.Cliente;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Victor Manuel Araya
 */
public class ListarClientes extends javax.swing.JFrame {

    /**
     * Creates new form ListarClientes
     */
    public ListarClientes() {
        initComponents();
        this.setLocationRelativeTo(null);
        //rellenando la tabla
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("PU");
        for(Cliente c : new ClienteJpaController(emf).listar()) {
            DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();
            Object [] fila = new Object[5];
            fila[0] = c.getRut()+"-"+c.getDv();
            fila[1] = c.getApaterno()+" "+c.getAmaterno()+" "+c.getNombre();
            fila[2] = (c.getDireccion()+", "+c.getCiudad().getNombre()+", "+c.getCiudad().getProvincia().getNombre()+", "+c.getCiudad().getProvincia().getRegion().getNombre()+", "+c.getCiudad().getProvincia().getRegion().getPais().getNombre()).toUpperCase();
            fila[3] = c.getTelefono();
            fila[4] = "Editar";
            modelo.addRow(fila);
            tablaClientes.setModel(modelo);
            tablaClientes.getColumnModel().getColumn(4).setCellRenderer(new ButtonRenderer());
            tablaClientes.getColumnModel().getColumn(4).setCellEditor(new ButtonEditor(new JTextField()));
        }
        emf.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtBuscador = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("StarLabs DreamHome :: Clientes");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Búsqueda por Rut"));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel1.setText("Ingrese RUT sin dígito verificador");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Clientes"));

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rut", "Nombre", "Dirección", "Teléfono", "Acciones"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("PU");
        List<Cliente> lista = new ClienteJpaController(emf).buscarClientePorRUT(txtBuscador.getText());
        //tablaClientes.setModel(new DefaultTableModel());
        if(lista == null)
        {
            int valor = JOptionPane.showConfirmDialog(null, "No se han retornado clientes con el rut especificado.\n¿Desea cambiar el rut buscado?", "No hay resultados", 1);
            if(valor == 0) {
                txtBuscador.setText("");
                txtBuscador.requestFocus();
            }else{
                if(valor == 2)
                {
                    Object [] nombres = new Object[5];
                    nombres[0] = "Rut";
                    nombres[1] = "Nombre";
                    nombres[2] = "Dirección";
                    nombres[3] = "Teléfono";
                    nombres[4] = "Acciones";
                    tablaClientes.setModel(new DefaultTableModel(nombres, 0));
                    for(Cliente c : new ClienteJpaController(emf).listar()) {
                        DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();
                        Object [] fila = new Object[5];
                        fila[0] = c.getRut()+"-"+c.getDv();
                        fila[1] = c.getApaterno()+" "+c.getAmaterno()+" "+c.getNombre();
                        fila[2] = (c.getDireccion()+", "+c.getCiudad().getNombre()+", "+c.getCiudad().getProvincia().getNombre()+", "+c.getCiudad().getProvincia().getRegion().getNombre()+", "+c.getCiudad().getProvincia().getRegion().getPais().getNombre()).toUpperCase();
                        fila[3] = c.getTelefono();
                        fila[4] = "Editar";
                        modelo.addRow(fila);
                        tablaClientes.setModel(modelo);
                        tablaClientes.getColumnModel().getColumn(4).setCellRenderer(new ButtonRenderer());
                        tablaClientes.getColumnModel().getColumn(4).setCellEditor(new ButtonEditor(new JTextField()));
                        
                    }
                }
            }
        }else{
            String [] nombres = new String[5];
            nombres[0] = "Rut";
            nombres[1] = "Nombre";
            nombres[2] = "Dirección";
            nombres[3] = "Teléfono";
            nombres[4] = "Acciones";
            tablaClientes.setModel(new DefaultTableModel(nombres, 0));
            for(Cliente c : lista) {
                DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();
                Object [] fila = new Object[5];
                fila[0] = c.getRut()+"-"+c.getDv();
                fila[1] = c.getApaterno()+" "+c.getAmaterno()+" "+c.getNombre();
                fila[2] = (c.getDireccion()+", "+c.getCiudad().getNombre()+", "+c.getCiudad().getProvincia().getNombre()+", "+c.getCiudad().getProvincia().getRegion().getNombre()+", "+c.getCiudad().getProvincia().getRegion().getPais().getNombre()).toUpperCase();
                fila[3] = c.getTelefono();
                fila[4] = "Editar";
                modelo.addRow(fila);
                tablaClientes.setModel(modelo);
                tablaClientes.getColumnModel().getColumn(4).setCellRenderer(new ButtonRenderer());
                tablaClientes.getColumnModel().getColumn(4).setCellEditor(new ButtonEditor(new JTextField()));

            }
        }
        emf.close();
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTextField txtBuscador;
    // End of variables declaration//GEN-END:variables
}

//BUTTON RENDERER CLASS
class ButtonRenderer extends JButton implements  TableCellRenderer
{

	//CONSTRUCTOR
	public ButtonRenderer() {
		//SET BUTTON PROPERTIES
		setOpaque(true);
	}
	@Override
	public Component getTableCellRendererComponent(JTable table, Object obj,
			boolean selected, boolean focused, int row, int col) {
		
		//SET PASSED OBJECT AS BUTTON TEXT
			setText((obj==null) ? "":obj.toString());
				
		return this;
	}
	
}

class ButtonEditor extends DefaultCellEditor
{
	protected JButton btn;
	 private String lbl;
	 private Boolean clicked;
	 
	 public ButtonEditor(JTextField txt) {
		super(txt);
		
		btn=new JButton();
		btn.setOpaque(true);
		
		//WHEN BUTTON IS CLICKED
		btn.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				
				fireEditingStopped();
			}
		});
	}
	 
	 //OVERRIDE A COUPLE OF METHODS
	 @Override
	public Component getTableCellEditorComponent(JTable table, Object obj,
			boolean selected, int row, int col) {

			//SET TEXT TO BUTTON,SET CLICKED TO TRUE,THEN RETURN THE BTN OBJECT
		/*lbl=(obj==null) ? "":obj.toString();*/
		 btn.setText(lbl);
		 clicked=true;
                lbl = String.valueOf(table.getModel().getValueAt(table.getSelectedRow(), 0));
		return btn;
                
	}
	 
	//IF BUTTON CELL VALUE CHNAGES,IF CLICKED THAT IS
	 @Override
	public Object getCellEditorValue() {

		 if(clicked)
			{
			//SHOW US SOME MESSAGE
                            //JOptionPane.showMessageDialog(btn, lbl+" Clicked");
                            EntityManagerFactory emf = Persistence.createEntityManagerFactory("PU");
                            AgregarCliente agcli = new AgregarCliente(new ClienteJpaController(emf).buscarClientePorRUTExacto(lbl));
                            emf.close();
                            agcli.setVisible(true);
			}   
		//SET IT TO FALSE NOW THAT ITS CLICKED
		clicked=false;
	  return new String("Editar");
	}
	
	 @Override
	public boolean stopCellEditing() {

	       //SET CLICKED TO FALSE FIRST
			clicked=false;
		return super.stopCellEditing();
	}
	 
	 @Override
	protected void fireEditingStopped() {
		// TODO Auto-generated method stub
		super.fireEditingStopped();
	}
}